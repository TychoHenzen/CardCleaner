Scripts
-Test.cs
StartScene.tscn
export_context.ps1
project.godot

=== Begin Scripts/Test.cs ===
using Godot;
using System;

public partial class Test : Node
{
	// Called when the node enters the scene tree for the first time.
	public override void _Ready()
	{
	}

	// Called every frame. 'delta' is the elapsed time since the previous frame.
	public override void _Process(double delta)
	{
	}
}
=== End Scripts/Test.cs ===

=== Begin StartScene.tscn ===
[gd_scene format=3 uid="uid://cc3ymqg03a2g5"]

[node name="Node3D" type="Node3D"]

[node name="CSGBox3D" type="CSGBox3D" parent="."]
size = Vector3(9.87402, 0.175537, 10.1213)

[node name="Camera3D" type="Camera3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.74295, 2.79691)
=== End StartScene.tscn ===

=== Begin export_context.ps1 ===
Param(
    [string]$Output = ".\Card_Context.txt"
)

# 1. Gather tracked text files
$extensions = '.cs','.csproj','.txt','.gox','.json','.xml','.yml','.mgcb','.spritefont','.md','.ps1','.godot','.tscn'
$files = git ls-files |
        Where-Object { $extensions -contains ([IO.Path]::GetExtension($_)) } |
        Where-Object { $_ -notmatch '(/\.vscode/|/\.idea/|README\.md|CLAUDE\.md|\.csproj$|\.sln$)' }

# 2. Write a simple “tree” view
$files | ForEach-Object {
    $segments = $_ -split '[\\/]'
    for ($i = 0; $i -lt $segments.Length; $i++) {
        $indent = '-' * $i
        Write-Output ("{0}{1}" -f $indent, $segments[$i])
    }
} | Out-File -FilePath $Output -Encoding UTF8

# 3. Append file contents
Add-Content $Output ""
foreach ($file in $files) {
    Add-Content $Output "=== Begin $file ==="
    Get-Content $file | Add-Content -Path $Output
    Add-Content $Output "=== End $file ===`n"
}

Write-Host "Context dumped to $Output"


# load WinForms for Clipboard support
Add-Type -AssemblyName System.Windows.Forms

# create a StringCollection with the full path
$files = New-Object System.Collections.Specialized.StringCollection
$files.Add((Resolve-Path $Output).Path)

# put it on the clipboard as a FileDropList
[System.Windows.Forms.Clipboard]::SetFileDropList($files)

Write-Host "Copied file [$Output] itself to the clipboard. You can now Paste it in Explorer."
=== End export_context.ps1 ===

=== Begin project.godot ===
; Engine configuration file.
; It's best edited using the editor UI and not directly,
; since the parameters that go here are not all obvious.
;
; Format:
;   [section] ; section goes between []
;   param=value ; assign values to parameters

config_version=5

[application]

config/name="CardCleaner"
run/main_scene="res://StartScene.tscn"
config/features=PackedStringArray("4.4", "C#", "Forward Plus")
config/icon="res://icon.svg"

[dotnet]

project/assembly_name="CardCleaner"

[editor_plugins]

enabled=PackedStringArray("res://addons/contextDumper/plugin.cfg")
=== End project.godot ===

